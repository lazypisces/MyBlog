import{_ as h}from"./plugin-vue_export-helper.21dcd24c.js";import{r as c,c as i,a as e,F as o,f as p,b as s,e as t,t as d,d as a,o as r}from"./app.e06da8b8.js";const u={},_=e("h1",{id:"introduction0",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#introduction0","aria-hidden":"true"},"#"),t(" Introduction0")],-1),m=e("h1",{id:"\u57FA\u672C\u529F\u80FD\u4ECB\u7D39",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#\u57FA\u672C\u529F\u80FD\u4ECB\u7D39","aria-hidden":"true"},"#"),t(" \u57FA\u672C\u529F\u80FD\u4ECB\u7D39")],-1),g=e("hr",null,null,-1),b=e("p",null,"\u5728markdown\u4F7F\u7528vue \u4E00\u52A0\u4E00\u7B49\u4E8E\uFF1A "+d(1+1),-1),k=a(`<hr><h2 id="md-\u7A0B\u5F0F\u78BC\u884C\u6578" tabindex="-1"><a class="header-anchor" href="#md-\u7A0B\u5F0F\u78BC\u884C\u6578" aria-hidden="true">#</a> md \u7A0B\u5F0F\u78BC\u884C\u6578</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// line-numbers is enabled by default</span>
<span class="token keyword">const</span> line2 <span class="token operator">=</span> <span class="token string">&#39;This is line 2&#39;</span>
<span class="token keyword">const</span> line3 <span class="token operator">=</span> <span class="token string">&#39;This is line 3&#39;</span>
</code></pre><div class="highlight-lines"><div class="highlight-line">\xA0</div><br><div class="highlight-line">\xA0</div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token comment">// line-numbers is disabled</span>
<span class="token keyword">const</span> line2 <span class="token operator">=</span> <span class="token string">&#39;This is line 2&#39;</span>
<span class="token keyword">const</span> line3 <span class="token operator">=</span> <span class="token string">&#39;This is line 3&#39;</span>
</code></pre><div class="highlight-lines"><div class="highlight-line">\xA0</div><br><div class="highlight-line">\xA0</div></div></div><h2 id="md-\u5167\u53EF\u7DE8\u8B6F" tabindex="-1"><a class="header-anchor" href="#md-\u5167\u53EF\u7DE8\u8B6F" aria-hidden="true">#</a> md \u5167\u53EF\u7DE8\u8B6F</h2><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token comment">&lt;!-- This will be kept as is by default --&gt;</span>
1 + 2 + 3 = {{ 1 + 2 + 3 }}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token comment">&lt;!-- This will be compiled by Vue --&gt;</span>
1 + 2 + 3 = 6
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// This won&#39;t be compiled correctly because of js syntax highlighting</span>
<span class="token keyword">const</span> onePlusTwoPlusThree <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>category_1</p><p><strong>Advertisement \u{1F603}</strong></p>`,11),f={href:"https://nodeca.github.io/pica/demo/",target:"_blank",rel:"noopener noreferrer"},v=t("pica"),x=t(" - high quality and fast image resize in browser."),w={href:"https://github.com/nodeca/babelfish/",target:"_blank",rel:"noopener noreferrer"},y=t("babelfish"),T=t(" - developer friendly i18n with plurals support and easy syntax."),q=a(`<p>You will like those projects!</p><hr><h1 id="h1-heading" tabindex="-1"><a class="header-anchor" href="#h1-heading" aria-hidden="true">#</a> h1 Heading \u{1F60E}</h1><h2 id="h2-heading" tabindex="-1"><a class="header-anchor" href="#h2-heading" aria-hidden="true">#</a> h2 Heading</h2><h3 id="h3-heading" tabindex="-1"><a class="header-anchor" href="#h3-heading" aria-hidden="true">#</a> h3 Heading</h3><h4 id="h4-heading" tabindex="-1"><a class="header-anchor" href="#h4-heading" aria-hidden="true">#</a> h4 Heading</h4><h5 id="h5-heading" tabindex="-1"><a class="header-anchor" href="#h5-heading" aria-hidden="true">#</a> h5 Heading</h5><h6 id="h6-heading" tabindex="-1"><a class="header-anchor" href="#h6-heading" aria-hidden="true">#</a> h6 Heading</h6><h2 id="horizontal-rules" tabindex="-1"><a class="header-anchor" href="#horizontal-rules" aria-hidden="true">#</a> Horizontal Rules</h2><hr><hr><hr><h2 id="typographic-replacements" tabindex="-1"><a class="header-anchor" href="#typographic-replacements" aria-hidden="true">#</a> Typographic replacements</h2><p>Enable typographer option to see result.</p><p>(c) (C) (r) (R) (tm) (TM) (p) (P) +-</p><p>test.. test... test..... test?..... test!....</p><p>!!!!!! ???? ,, -- ---</p><p>&quot;Smartypants, double quotes&quot; and &#39;single quotes&#39;</p><h2 id="emphasis" tabindex="-1"><a class="header-anchor" href="#emphasis" aria-hidden="true">#</a> Emphasis</h2><p><strong>This is bold text</strong></p><p><strong>This is bold text</strong></p><p><em>This is italic text</em></p><p><em>This is italic text</em></p><p><s>Strikethrough</s></p><h2 id="blockquotes" tabindex="-1"><a class="header-anchor" href="#blockquotes" aria-hidden="true">#</a> Blockquotes</h2><blockquote><p>Blockquotes can also be nested...</p><blockquote><p>...by using additional greater-than signs right next to each other...</p><blockquote><p>...or with spaces between arrows.</p></blockquote></blockquote></blockquote><h2 id="lists" tabindex="-1"><a class="header-anchor" href="#lists" aria-hidden="true">#</a> Lists</h2><p>Unordered</p><ul><li>Create a list by starting a line with <code>+</code>, <code>-</code>, or <code>*</code></li><li>Sub-lists are made by indenting 2 spaces: <ul><li>Marker character change forces new list start: <ul><li>Ac tristique libero volutpat at</li></ul><ul><li>Facilisis in pretium nisl aliquet</li></ul><ul><li>Nulla volutpat aliquam velit</li></ul></li></ul></li><li>Very easy!</li></ul><p>Ordered</p><ol><li><p>Lorem ipsum dolor sit amet</p></li><li><p>Consectetur adipiscing elit</p></li><li><p>Integer molestie lorem at massa</p></li><li><p>You can use sequential numbers...</p></li><li><p>...or keep all the numbers as <code>1.</code></p></li></ol><p>Start numbering with offset:</p><ol start="57"><li>foo</li><li>bar</li></ol><h2 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h2><p>Inline <code>code</code></p><p>Indented code</p><pre><code>// Some comments
line 1 of code
line 2 of code
line 3 of code
</code></pre><p>Block code &quot;fences&quot;</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Sample text here...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Syntax highlighting</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">bar</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> bar<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><div class="highlight-line">\xA0</div><br><br><br><div class="highlight-line">\xA0</div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="tables" tabindex="-1"><a class="header-anchor" href="#tables" aria-hidden="true">#</a> Tables</h2><table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td>data</td><td>path to data files to supply the data that will be passed into templates.</td></tr><tr><td>engine</td><td>engine to be used for processing templates. Handlebars is the default.</td></tr><tr><td>ext</td><td>extension to be used for dest files.</td></tr></tbody></table><p>Right aligned columns</p><table><thead><tr><th style="text-align:right;">Option</th><th style="text-align:right;">Description</th></tr></thead><tbody><tr><td style="text-align:right;">data</td><td style="text-align:right;">path to data files to supply the data that will be passed into templates.</td></tr><tr><td style="text-align:right;">engine</td><td style="text-align:right;">engine to be used for processing templates. Handlebars is the default.</td></tr><tr><td style="text-align:right;">ext</td><td style="text-align:right;">extension to be used for dest files.</td></tr></tbody></table><h2 id="links" tabindex="-1"><a class="header-anchor" href="#links" aria-hidden="true">#</a> Links</h2>`,46),j={href:"http://dev.nodeca.com",target:"_blank",rel:"noopener noreferrer"},H=t("link text"),S={href:"http://nodeca.github.io/pica/demo/",title:"title text!",target:"_blank",rel:"noopener noreferrer"},L=t("link with title"),D=a('<p>Autoconverted link https://github.com/nodeca/pica (enable linkify to see)</p><h2 id="images" tabindex="-1"><a class="header-anchor" href="#images" aria-hidden="true">#</a> Images</h2><p><img src="https://octodex.github.com/images/minion.png" alt="Minion"><img src="https://octodex.github.com/images/stormtroopocat.jpg" alt="Stormtroopocat" title="The Stormtroopocat"></p><p>Like links, Images also have a footnote style syntax</p><p><img src="https://octodex.github.com/images/dojocat.jpg" alt="Alt text" title="The Dojocat"></p><p>With a reference later in the document defining the URL location:</p><h2 id="plugins" tabindex="-1"><a class="header-anchor" href="#plugins" aria-hidden="true">#</a> Plugins</h2>',7),I=t("The killer feature of "),M=e("code",null,"markdown-it",-1),C=t(" is very effective support of "),F={href:"https://www.npmjs.org/browse/keyword/markdown-it-plugin",target:"_blank",rel:"noopener noreferrer"},B=t("syntax plugins"),E=t("."),V={id:"emojies",tabindex:"-1"},z=e("a",{class:"header-anchor",href:"#emojies","aria-hidden":"true"},"#",-1),A=t(),N={href:"https://github.com/markdown-it/markdown-it-emoji",target:"_blank",rel:"noopener noreferrer"},O=t("Emojies"),P=e("blockquote",null,[e("p",null,"Classic markup: \u{1F609} :crush: \u{1F622} :tear: \u{1F606} \u{1F60B}"),e("p",null,"Shortcuts (emoticons): \u{1F603} \u{1F626} \u{1F60E} \u{1F609}")],-1),R=t("see "),U={href:"https://github.com/markdown-it/markdown-it-emoji#change-output",target:"_blank",rel:"noopener noreferrer"},Y=t("how to change output"),W=t(" with twemoji."),G={id:"subscript-superscript",tabindex:"-1"},J=e("a",{class:"header-anchor",href:"#subscript-superscript","aria-hidden":"true"},"#",-1),K=t(),Q={href:"https://github.com/markdown-it/markdown-it-sub",target:"_blank",rel:"noopener noreferrer"},X=t("Subscript"),Z=t(" / "),$={href:"https://github.com/markdown-it/markdown-it-sup",target:"_blank",rel:"noopener noreferrer"},ee=t("Superscript"),te=e("ul",null,[e("li",null,"19^th^"),e("li",null,"H~2~O")],-1),ne={id:"ins",tabindex:"-1"},se=e("a",{class:"header-anchor",href:"#ins","aria-hidden":"true"},"#",-1),ae=t(),ie={href:"https://github.com/markdown-it/markdown-it-ins",target:"_blank",rel:"noopener noreferrer"},oe=t("<ins>"),re=e("p",null,"++Inserted text++",-1),de={id:"mark",tabindex:"-1"},le=e("a",{class:"header-anchor",href:"#mark","aria-hidden":"true"},"#",-1),he=t(),ce={href:"https://github.com/markdown-it/markdown-it-mark",target:"_blank",rel:"noopener noreferrer"},pe=t("<mark>"),ue=e("p",null,[e("mark",null,"Marked text")],-1),_e={id:"footnotes",tabindex:"-1"},me=e("a",{class:"header-anchor",href:"#footnotes","aria-hidden":"true"},"#",-1),ge=t(),be={href:"https://github.com/markdown-it/markdown-it-footnote",target:"_blank",rel:"noopener noreferrer"},ke=t("Footnotes"),fe=e("p",null,"Footnote 1 link[^first].",-1),ve=e("p",null,"Footnote 2 link[^second].",-1),xe=e("p",null,"Inline footnote^[Text of inline footnote] definition.",-1),we=e("p",null,"Duplicated footnote reference[^second].",-1),ye=e("p",null,[t("[^first]: Footnote "),e("strong",null,"can have markup")],-1),Te=e("pre",null,[e("code",null,`and multiple paragraphs.
`)],-1),qe=e("p",null,"[^second]: Footnote text.",-1),je={id:"definition-lists",tabindex:"-1"},He=e("a",{class:"header-anchor",href:"#definition-lists","aria-hidden":"true"},"#",-1),Se=t(),Le={href:"https://github.com/markdown-it/markdown-it-deflist",target:"_blank",rel:"noopener noreferrer"},De=t("Definition lists"),Ie=a(`<p>Term 1</p><p>: Definition 1 with lazy continuation.</p><p>Term 2 with <em>inline markup</em></p><p>: Definition 2</p><pre><code>    { some code, part of Definition 2 }

Third paragraph of definition 2.
</code></pre><p><em>Compact style:</em></p><p>Term 1 ~ Definition 1</p><p>Term 2 ~ Definition 2a ~ Definition 2b</p>`,8),Me={id:"abbreviations",tabindex:"-1"},Ce=e("a",{class:"header-anchor",href:"#abbreviations","aria-hidden":"true"},"#",-1),Fe=t(),Be={href:"https://github.com/markdown-it/markdown-it-abbr",target:"_blank",rel:"noopener noreferrer"},Ee=t("Abbreviations"),Ve=e("p",null,"This is HTML abbreviation example.",-1),ze=e("p",null,'It converts "HTML", but keep intact partial entries like "xxxHTMLyyy" and so on.',-1),Ae=e("p",null,"*[HTML]: Hyper Text Markup Language",-1),Ne={id:"custom-containers",tabindex:"-1"},Oe=e("a",{class:"header-anchor",href:"#custom-containers","aria-hidden":"true"},"#",-1),Pe=t(),Re={href:"https://github.com/markdown-it/markdown-it-container",target:"_blank",rel:"noopener noreferrer"},Ue=t("Custom containers"),Ye=e("div",{class:"custom-container warning"},[e("p",{class:"custom-container-title"},"\u6CE8\u610F"),e("p",null,[e("em",null,"here be dragons")])],-1);function We(Ge,Je){const n=c("ExternalLinkIcon");return r(),i(o,null,[_,m,g,b,e("p",null,[(r(),i(o,null,p(3,l=>e("span",null," span: "+d(l),1)),64))]),k,e("ul",null,[e("li",null,[e("strong",null,[e("a",f,[v,s(n)])]),x]),e("li",null,[e("strong",null,[e("a",w,[y,s(n)])]),T])]),q,e("p",null,[e("a",j,[H,s(n)])]),e("p",null,[e("a",S,[L,s(n)])]),D,e("p",null,[I,M,C,e("a",F,[B,s(n)]),E]),e("h3",V,[z,A,e("a",N,[O,s(n)])]),P,e("p",null,[R,e("a",U,[Y,s(n)]),W]),e("h3",G,[J,K,e("a",Q,[X,s(n)]),Z,e("a",$,[ee,s(n)])]),te,e("h3",ne,[se,ae,e("a",ie,[oe,s(n)])]),re,e("h3",de,[le,he,e("a",ce,[pe,s(n)])]),ue,e("h3",_e,[me,ge,e("a",be,[ke,s(n)])]),fe,ve,xe,we,ye,Te,qe,e("h3",je,[He,Se,e("a",Le,[De,s(n)])]),Ie,e("h3",Me,[Ce,Fe,e("a",Be,[Ee,s(n)])]),Ve,ze,Ae,e("h3",Ne,[Oe,Pe,e("a",Re,[Ue,s(n)])]),Ye],64)}var Xe=h(u,[["render",We],["__file","test.html.vue"]]);export{Xe as default};
